    type ClassT : String(20);
    type DescriptionT : String(100);
    type LongDescriptionT: String(1000);
    type UrlT : String(450);
    type ProductT: String(20);
    type UserT : String(40);
    type SDate : UTCTimestamp;
    type StatusT : String(1);
    type AppKeyT : String(50);
    type ObjectKeyT : String(40);
    type ScenarioT : String(10);
    type CurrencyT : String(5);
    type WeightUnitT : String(5);
    type AmountT : Decimal(15, 2);
    type WeightT : Decimal(15, 4);
    type TaxT : Decimal(15, 4);
    type CoordinateT : Decimal (15,8);
    type CustomerT: String(20);
    type QuantityT: Integer;
    type HistoryT {
        @Comment : 'Created By'
        CREATEDBY : UserT;
        @Comment : 'Created Date'
        CREATEDAT : SDate;
        @Comment : 'Changed By'
        CHANGEDBY : UserT;
        @Comment : 'Change Date'
        CHANGEDAT : SDate;
    };

    entity ProductOverride {
        key upc: ProductT;
        name: DescriptionT;
        ingredient: DescriptionT;
        shortDescription: LongDescriptionT;
        size: DescriptionT;
        category: DescriptionT;
        msrp : AmountT;
        weight: WeightUnitT;
        image: UrlT;
        hasCollection: Boolean;
    } 
    technical configuration {
    	column store;
    };
    
    entity CollectionOptions {
        key upc: ProductT;
        key size: DescriptionT;
        msrp : AmountT;
        weight: WeightUnitT;
        size_upc: ProductT;
    } 
    technical configuration {
    	column store;
    };
    
    entity StockPhotoOverride {
        upc: ProductT;
    	snapshot : LargeBinary;
    } 
    technical configuration {
    	column store;
    };
    
    entity UPCCache {
        upc: ProductT;
    	cacheObject : LargeString;
    } 
    technical configuration {
    	column store;
    };
    
    entity AnalysisRequest {
        autoId : Integer generated by default as identity ( start with 10000000 increment by 1 );
    	appKey : AppKeyT;
    	timestamp : UTCTimestamp;
    	imageType : String(1);
    	snapshot : LargeBinary;
    	status : StatusT;
    	history : HistoryT;
    } 
    technical configuration {
    	column store;
    };
    
    entity ShoppingCartHeader {
    	key autoId: Integer generated by default as identity ( start with 10000000 increment by 1 );
    	appKey: AppKeyT;
    	customer : CustomerT;
    	timestamp : UTCTimestamp;
    	totalWeight: WeightT;
    	totalCost: AmountT;
    	currency: CurrencyT;
    	weightUnit: WeightUnitT;
    	status : StatusT;
    	history : HistoryT;
    } 
    technical configuration {
    	column store;
    }; 
    
    entity InventoryLocation {
    	key upc: ProductT;
    	category:DescriptionT;
    	quantity: QuantityT;
    	aisle: DescriptionT;
    	area: DescriptionT;
    }
    technical configuration {
    	column store;
    }
    
    entity ShoppingCartDetails {
    	key autoId: Integer generated by default as identity ( start with 10000000 increment by 1 );
    	header: Integer;
    	upc: ProductT;
    	description: DescriptionT;
    	ingredient: DescriptionT;
    	size: DescriptionT;
    	quantity : QuantityT;
    	weight : WeightT;
    	price: AmountT;
    	image : LargeString;
    	history : HistoryT;
    } 
    technical configuration {
    	column store;
    }; 
    
    entity ProductToIngredientMap {
    	product: ProductT;
    	ingredient: DescriptionT;
    }
    technical configuration {
        column store;
    }
    
    entity Locks{
    	scenario : ScenarioT;
    	time : UTCTimestamp;
    } 
    technical configuration {
    	column store;
    }; 
    
    entity AnalysisResults {
        key autoId: Integer generated by default as identity ( start with 10000000 increment by 1 );
    	appKey : AppKeyT;
    	timestamp : UTCTimestamp;
    	imageType : String(1);
    	upc : ClassT;
    	match : Double;
    	xMin : CoordinateT;
    	yMin : CoordinateT;
    	xMax : CoordinateT;
    	yMax : CoordinateT;
    }
    technical configuration {
        column store;
    };
    
    entity Customer {
    	key customer : CustomerT;
    	email : DescriptionT;
    	username: UserT;
    	firstName: UserT;
    	lastName: UserT;
    	timestamp : UTCTimestamp;
    } 
    technical configuration {
    	column store;
    };
    
    entity SalesOrder {
        key orderNumber: Integer;
    	customer : CustomerT;
    	partNumber : ClassT;
    	timestamp : UTCTimestamp;
    }
    technical configuration {
        column store;
    };
    
    entity Promotions {
        key promotion: ClassT;
        status: StatusT;
        discount: AmountT;
        upc: ProductT;
    	image : LargeString;
    	description: DescriptionT;
    	promotionalDesc: DescriptionT;
    }
    technical configuration {
        column store;
    };